name: Bygg og deploy master til dev

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Bygg med npm install
        run: CI=false npm install
        env:
          NODE_ENV: production
          PUBLIC_URL: https://arbeidsgiver-q.nav.no/nettrefusjon
          PROXY: https://arbeidsgiver-q.nav.no/nettrefusjon
          REACT_APP_BASE_URL: https://arbeidsgiver-q.nav.no/nettrefusjon
          REACT_APP_LOGIN_SERVICE_URL: https://loginservice-q.nav.no/login?redirect=https://arbeidsgiver-q.nav.no/nettrefusjon/
      - run: npm test
      - name: create docker tag
        env:
          DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/sporenstreks-frontend
        run: |
          echo $DOCKER_IMAGE > .docker_image
          echo $(echo $GITHUB_SHA | cut -c1-7) > .docker_tag
      - name: build docker image
        run: docker build . --pull -t $(cat .docker_image):$(cat .docker_tag)
      - name: push docker image
        run: |
          echo "$GITHUB_ACCESS_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push $(cat .docker_image):$(cat .docker_tag)
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
      - name: deploy to dev
        uses: navikt/deployment-cli/action@0.4.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          AWAIT_SECONDS: 0
        with:
          cluster: dev-sbs
          team: helsearbeidsgiver
          resources: deploy/dev.yaml
